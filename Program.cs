// Задайте одномерный массив, заполненный случайными
// числами. Определите количество простых чисел в этом
// массиве.
// Примеры
// [1 3 4 19 3] => 2
// [4 3 4 1 9 5 21 13] => 3

int[] CreateArrayRndInt(int size, int min, int max) // (сигнатура метода) объявление функции заполнения массива случайными числами и возращением значений типа int и последующими ее параметрами
// тело метода функции
{
    int[] array = new int[size]; // объявление массива с размером "size"
    Random rnd = new Random(); // объект для генерации чисел

    for (int i = 0; i < array.Length; i++) // цикл для заполнения массива
    {
        array[i] = rnd.Next(min, max); // вызов метода лля генерации случайных чисел с параметроми(отрезок)- от и до(невключительно)
    }
    return array;
    // метод создания массива случайными числами окончен
}

void PrintArray(int[] array)  // функций вывода результата в консоль (не возвращающая значения-тип метода "void")
// тело метода функции
{
    Console.Write("["); // команда для вывода массива в квадратных скобка(открывающая скобка)
    for (int i = 0; i < array.Length; i++) // цикл для вывода всех элементов массива по порядку(от 0-го элемента)
    {
        Console.Write($"{array[i]}"); // команда вывода
    }
    Console.Write("]"); // закрывающая скобка
}
// 
int CountPrime(int[] array) //объявление функции подсчета количества целых простых чисел 
// тело метода функции
{
    int count = 0; // переменная для подсчёта количества целых простых чисел
    for (int i = 0; i < array.Length; i++) // проход по всем элементам массива
    {
        if (IsPrime(array[i])) count++; // условие: является ли элемент массива(число) простым, записываем в переменную "count", если да 
    }
    return count; // возврат результата
}
// пример: ряд чисел 2 3 4 5 6 7 8 9 10 11 12 13
bool IsPrime(int num) // объявлении функции для проверки на простоту чиисла
{
    for (int i = 2; i <= Math.Sqrt(num); i++) // цикл перебора всех чисел от 2 до квадрата от "num". Если "num" делится на любое из этих чисел без остатка, то "num" не является простым числом.
    {
        if (num % i == 0) return false; // условное выражение внутри цикла. Если "num" делится на "i" без остатка (то есть num % i равно 0), то "num" не является простым числом, и функция возвращает false
    }
    return true; // eсли цикл завершается без возврата "false", это означает, что "num" не делится на любое число от 2 до квадратного корня из "num" без остатка. Следовательно, "num" является простым числом, и функция возвращает "true"
}

int[] arr = CreateArrayRndInt(5, 1, 100); // новая переменная, вызывающая  первую функцию для возвращенных значений с (параметрами:size=5, min=1, max=100)
PrintArray(arr); // вызов функции для вывода этой переменной

int result = CountPrime(arr); // переменная для вывода
Console.WriteLine(result); // Console.WriteLine(CountPrime(arr)) можно так